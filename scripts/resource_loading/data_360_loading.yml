---
users:
  - username: anonymous
    email: anonymous@example.com
    password: password
    first_name: Anonymous
    last_name: User
    is_superuser: false

  - username: bender_eng_user
    email: bender_eng_user@bender.com
    password: password
    first_name: Bender Engineering
    last_name: User
    is_superuser: false

  - username: bender_it_user
    email: bender_it_user@bender.com
    password: password
    first_name: Bender IT
    last_name: User
    is_superuser: false

  - username: bender_admin
    email: bender_admin@bender.com
    password: password
    first_name: Bender
    last_name: Admin
    is_superuser: false

  - username: ansible_user
    email: ansible_user@ansible.com
    password: password
    first_name: Ansible
    last_name: User
    is_superuser: false

  - username: ansible_it_user
    email: ansible_it_user@ansible.com
    password: password
    first_name: Ansible IT
    last_name: User
    is_superuser: false

  - username: ansible_admin
    email: ansible_admin@ansible.com
    password: password
    first_name: Ansible
    last_name: Admin
    is_superuser: false

organizations:
  - name: Bender Products
    description: Bender Products, Ltd.
    users:
      - bender_eng_user
      - bender_it_user
    admins:
      - bender_admin
    projects:
      - ansible-examples.git (git)
      - ansible-examples.svn (svn)
      - ansible-examples.git (github, ssh_key_data)
      - ansible-examples.git (github, ssh_key_data, ssh_key_unlock)

  - name: Ansible, Inc
    description: Ansible is the simplest way to automate IT.
    users:
      - ansible_user
      - ansible_it_user
    admins:
      - ansible_admin
    projects:
      - ansible-playbooks.git (github, ssh_key_data)
      - ansible-tower.git (github, ssh_key_data)
      - tower-qa.git (github, ssh_key_data)

teams:
  - name: Bender IT
    description: IT Department
    organization: Bender Products
    users:
      - bender_it_user

  - name: Bender Engineering
    description: Engineering Department
    organization: Bender Products
    users:
      - bender_eng_user

  - name: Ansible Users
    organization: Ansible, Inc
    users:
      - ansible_user
      - ansible_it_user

  - name: Ansible IT
    organization: Ansible, Inc
    users:
      - ansible_it_user

credentials:
  - name: 'SSH (user:bender_eng_user, password:ASK)'
    description: 'user:bender_eng_user, ssh_user:root, password:ASK'
    kind: ssh
    user: bender_eng_user
    team: null
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: 'ASK'
      ssh_key_data: ''
      ssh_key_unlock: ''
      become_username: ''
      become_password: ''

  - name: 'SSH (user:bender_eng_user, password:***)'
    description: 'user:bender_eng_user, ssh_user:root, password:***'
    kind: ssh
    user: bender_eng_user
    team: null
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: '{password}'  # merged from credentials.yaml
      ssh_key_data: ''
      ssh_key_unlock: ''
      become_username: ''
      become_password: ''

  - name: 'SSH (user:bender_eng_user, ssh_key_data)'
    description: 'user:bender_eng_user, ssh_user:root, ssh_key_data'
    kind: ssh
    user: bender_eng_user
    team: null
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}'  # from credentials.yaml
      ssh_key_unlock: ''
      become_username: ''
      become_password: ''

  - name: 'SSH (user:bender_eng_user, ssh_key_data, ssh_key_unlock:ASK)'
    description: 'user:bender_eng_user, ssh_user:root, ssh_key_data, ssh_key_unlock:ASK'
    kind: ssh
    user: bender_eng_user
    team: null
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: ''
      ssh_key_data: '{encrypted[ssh_key_data]}'
      ssh_key_unlock: 'ASK'
      become_username: ''
      become_password: ''

  - name: 'SSH (user:bender_eng_user, ssh_key_data, ssh_key_unlock:***)'
    description: 'user:bender_eng_user, ssh_user:root, ssh_key_data, ssh_key_unlock:***'
    kind: ssh
    user: bender_eng_user
    team: null
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: ''
      ssh_key_data: '{encrypted[ssh_key_data]}'
      ssh_key_unlock: '{encrypted[ssh_key_unlock]}'
      become_username: ''
      become_password: ''

  - name: 'SSH (user:bender_eng_user, ssh_key_data, ssh_key_unlock:***)'
    description: 'user:bender_eng_user, ssh_user:root, ssh_key_data, ssh_key_unlock:***'
    kind: ssh
    user: bender_eng_user
    team: null
    inputs:
      username: ''
      password: ''
      ssh_key_data: ''
      ssh_key_unlock: ''
      become_username: ''
      become_password: ''

  - name: 'SSH (user:bender_eng_user, ssh_key_data, ssh_key_unlock:***)'
    description: 'user:bender_eng_user, ssh_user:root, ssh_key_data, ssh_key_unlock:***'
    kind: ssh
    user: bender_eng_user
    team: null
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: ''
      ssh_key_data: '{encrypted[ssh_key_data]}'
      ssh_key_unlock: '{encrypted[ssh_key_unlock]}'
      become_username: ''
      become_password: ''

  - name: 'SSH (user:bender_eng_user, become_password:ASK)'
    description: 'user:bender_eng_user, ssh_user:root, become_password:ASK'
    kind: ssh
    user: bender_eng_user
    team: null
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: '{password}'
      ssh_key_data: '{encrypted[ssh_key_data]}'
      ssh_key_unlock: '{encrypted[ssh_key_unlock]}'
      become_username: '{become_username}'
      become_password: 'ASK'

  - name: 'SSH (user:bender_eng_user, become_password:***)'
    description: 'user:bender_eng_user, ssh_user:root, become_password:***'
    kind: ssh
    user: bender_eng_user
    team: null
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: '{password}'
      ssh_key_data: '{encrypted[ssh_key_data]}'
      ssh_key_unlock: '{encrypted[ssh_key_unlock]}'
      become_username: '{become_username}'
      become_password: '{become_password}'

  - name: 'SSH (team:Engineering, password:ASK, ssh_key_unlock:ASK, become_password:ASK, vault_password:ASK)'
    description: 'team:Engineering, ssh_user:root, password:ASK, ssh_key_unlock:ASK, become_password:ASK, vault_password:ASK'
    kind: ssh
    user: null
    team: Bender Engineering
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: 'ASK'
      ssh_key_data: '{encrypted[ssh_key_data]}'
      ssh_key_unlock: 'ASK'
      become_username: '{become_username}'
      become_password: 'ASK'

  #
  # github credentials
  #
  - name: git@github.com (ssh_key_data)
    description: 'SCM credential for git@github.com (includes ssh_key_data)'
    kind: scm
    user: bender_eng_user
    team: null
    inputs:
      username: git
      password: ''
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: ''

  - name: git@github.com (ssh_key_data, ssh_key_unlock)
    description: 'SCM credential for git@github.com (includes ssh_key_data and ssh_key_unlock)'
    kind: scm
    user: bender_eng_user
    team: null
    inputs:
      username: git
      password: ''
      ssh_key_data: '{encrypted[ssh_key_data]}'
      ssh_key_unlock: '{encrypted[ssh_key_unlock]}'

  #
  # Amazon AWS Credentials
  #
  - name: 'AWS (user:bender_eng_user)'
    description: Amazon AWS credentials for bender_eng_user
    kind: aws
    user: bender_eng_user
    team: null
    inputs:
      username: '{username}'  # Gathered from credentials.yaml
      password: '{password}'  # Gathered from credentials.yaml

  - name: 'AWS (team:IT)'
    description: Amazon AWS credentials for bender_eng_user
    kind: aws
    user: null
    team: Bender IT
    inputs:
      username: '{username}'  # Gathered from credentials.yaml
      password: '{password}'  # Gathered from credentials.yaml

  #
  # Google Compute Credential
  #
  - name: 'Google Compute (team:IT)'
    description: 'Google Compute for team:IT'
    kind: gce
    user: null
    team: Bender IT
    inputs:
      username: '{username}'  # Gathered from credentials.yaml
      project: '{project}'    # Gathered from credentials.yaml
      ssh_key_data: '{ssh_key_data}'  # Gathered from credentials.yaml

  #
  # VMware vCenter Credential
  #
  - name: 'VMware vCenter (team:IT)'
    description: 'VMware vCenter (team:IT)'
    kind: vmware
    user: null
    team: Bender IT
    inputs:
      username: '{username}'  # Gathered from credentials.yaml
      password: '{password}'  # Gathered from credentials.yaml
      host: '{host}'          # Gathered from credentials.yaml

  #
  # OpenStack Credentials
  #
  - name: 'OpenStack (team:IT)'
    description: OpenStack credentials for team:IT
    kind: openstack
    user: null
    team: Bender IT
    inputs:
      username: '{username}'  # Gathered from credentials.yaml
      password: '{password}'  # Gathered from credentials.yaml
      project: '{project}'    # Gathered from credentials.yaml
      host: '{host}'          # Gathered from credentials.yaml

  #
  # Ansible Users team credentials
  #
  - name: 'SSH (team:Ansible Users, password:ASK)'
    description: 'team:Ansible Users, ssh_user:root, password:ASK'
    kind: ssh
    user: null
    team: Ansible Users
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: 'ASK'
      ssh_key_data: ''
      ssh_key_unlock: ''
      become_username: ''
      become_password: ''

  - name: 'SSH (team:Ansible Users, password:***)'
    description: 'team:Ansible Users, ssh_user:root, password:***'
    kind: ssh
    user: null
    team: Ansible Users
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: '{password}'  # merged from credentials.yaml
      ssh_key_data: ''
      ssh_key_unlock: ''
      become_username: ''
      become_password: ''

  - name: 'SSH (team:Ansible Users, ssh_key_data)'
    description: 'team:Ansible Users, ssh_user:root, ssh_key_data'
    kind: ssh
    user: null
    team: Ansible Users
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}'  # from credentials.yaml
      ssh_key_unlock: ''
      become_username: ''
      become_password: ''

  - name: 'SSH (team:Ansible Users, ssh_key_data, ssh_key_unlock:ASK)'
    description: 'team:Ansible Users, ssh_user:root, ssh_key_data, ssh_key_unlock:ASK'
    kind: ssh
    user: null
    team: Ansible Users
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: ''
      ssh_key_data: '{encrypted[ssh_key_data]}'
      ssh_key_unlock: 'ASK'
      become_username: ''
      become_password: ''

  - name: 'SSH (team:Ansible Users, ssh_key_data, ssh_key_unlock:***)'
    description: 'team:Ansible Users, ssh_user:root, ssh_key_data, ssh_key_unlock:***'
    kind: ssh
    user: null
    team: Ansible Users
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: ''
      ssh_key_data: '{encrypted[ssh_key_data]}'
      ssh_key_unlock: '{encrypted[ssh_key_unlock]}'
      become_username: ''
      become_password: ''

  - name: 'SSH (team:Ansible Users, ssh_key_data, ssh_key_unlock:***)'
    description: 'team:Ansible Users, ssh_user:root, ssh_key_data, ssh_key_unlock:***'
    kind: ssh
    user: null
    team: Ansible Users
    inputs:
      username: ''
      password: ''
      ssh_key_data: ''
      ssh_key_unlock: ''
      become_username: ''
      become_password: ''

  - name: 'SSH (team:Ansible Users, become_password:ASK)'
    description: 'team:Ansible Users, ssh_user:root, become_password:ASK'
    kind: ssh
    user: null
    team: Ansible Users
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: '{password}'
      ssh_key_data: '{encrypted[ssh_key_data]}'
      ssh_key_unlock: '{encrypted[ssh_key_unlock]}'
      become_username: '{become_username}'
      become_password: 'ASK'

  - name: 'SSH (team:Ansible Users, become_password:***)'
    description: 'team:Ansible Users, ssh_user:root, become_password:***'
    kind: ssh
    user: null
    team: Ansible Users
    inputs:
      username: '{username}'  # merged from credentials.yaml
      password: '{password}'
      ssh_key_data: '{encrypted[ssh_key_data]}'
      ssh_key_unlock: '{encrypted[ssh_key_unlock]}'
      become_username: '{become_username}'
      become_password: '{become_password}'

projects:
  - name: ansible-examples.git (git)
    description: 'scm_type:git'
    organization: Bender Products
    scm_type: git
    scm_url: 'https://github.com/ansible/ansible-examples.git'
    scm_branch: ''
    scm_clean: false
    scm_delete_on_update: false
    scm_update_on_launch: false

  - name: ansible-examples.svn (svn)
    description: 'scm_type:svn'
    organization: Bender Products
    scm_type: svn
    scm_url: 'https://github.com/ansible/ansible-examples'
    scm_branch: ''
    scm_clean: false
    scm_delete_on_update: false
    scm_update_on_launch: false

  - name: ansible-examples.git (github, ssh_key_data)
    description: 'git@github.com:ansible/ansible-examples.git (ssh_key_data)'
    organization: Bender Products
    scm_type: git
    scm_url: 'git@github.com:ansible/ansible-examples.git'
    scm_branch: 'master'
    scm_clean: false
    scm_delete_on_update: false
    scm_update_on_launch: false
    credential: git@github.com (ssh_key_data)

  - name: ansible-examples.git (github, ssh_key_data, ssh_key_unlock)
    description: 'git@github.com:ansible/ansible-examples.git (ssh_key_data, ssh_key_unlock)'
    organization: Bender Products
    scm_type: git
    scm_url: 'git@github.com:ansible/ansible-examples.git'
    scm_branch: 'master'
    scm_clean: false
    scm_delete_on_update: false
    scm_update_on_launch: false
    credential: git@github.com (ssh_key_data, ssh_key_unlock)

  - name: ansible-tower.git (github, ssh_key_data)
    description: 'git@github.com:ansible/ansible-tower.git (ssh_key_data)'
    organization: Ansible, Inc
    scm_type: git
    scm_url: 'git@github.com:ansible/ansible-tower.git'
    scm_branch: 'stable'
    scm_clean: false
    scm_delete_on_update: false
    scm_update_on_launch: false
    credential: git@github.com (ssh_key_data)

  - name: tower-qa.git (github, ssh_key_data)
    description: 'git@github.com:ansible/tower-qa.git (ssh_key_data)'
    organization: Ansible, Inc
    scm_type: git
    scm_url: 'git@github.com:ansible/tower-qa.git'
    scm_branch: 'master'
    scm_clean: false
    scm_delete_on_update: false
    scm_update_on_launch: false
    credential: git@github.com (ssh_key_data)

  - name: ansible-playbooks.git (github, ssh_key_data)
    description: 'git@github.com:ansible/test-playbooks.git (ssh_key_data)'
    organization: Ansible, Inc
    scm_type: git
    scm_url: 'git@github.com:ansible/test-playbooks.git'
    scm_branch: 'master'
    scm_clean: false
    scm_delete_on_update: false
    scm_update_on_launch: false
    credential: git@github.com (ssh_key_data)

  - name: Tower Fact Scan - Ansible, Inc
    description: ''
    organization: Ansible, Inc
    scm_type: git
    scm_url: 'https://github.com/ansible/awx-facts-playbooks'
    scm_branch: ''
    scm_clean: false
    scm_delete_on_update: false
    scm_update_on_launch: true

inventory_scripts:
  - name: script_generate_hosts
    description: Imports a specified number of hosts
    organization: Ansible, Inc
    script: |
      #!/usr/bin/env python

      import os
      import json

      inv = dict(_meta=dict(hostvars={}), hosts=[])

      NUM_HOSTS = os.getenv('NUM_HOSTS', '1')

      if NUM_HOSTS and isinstance(NUM_HOSTS, str) and NUM_HOSTS.isdigit():
          NUM_HOSTS = int(NUM_HOSTS)

      for num in range(0, NUM_HOSTS):
          host = u"host-%0.2d" % num
          inv['hosts'].append(host)
          inv['_meta']['hostvars'][host] = dict(ansible_host='127.0.0.1', ansible_connection='local')

      print(json.dumps(inv, indent=2))

inventories:
  - name: inventory-all
    description: Inventory tracking all systems
    organization: Bender Products

  - name: inventory-aws
    description: Includes only Amazon EC2 hosts
    organization: Ansible, Inc

  - name: inventory-gce
    description: Includes only Google Compute Engine hosts
    organization: Ansible, Inc

  - name: inventory-vmware
    description: Includes only VMware hosts
    organization: Ansible, Inc

  - name: inventory-openstack
    description: Includes only OpenStack hosts
    organization: Ansible, Inc

  - name: inventory-custom
    description: Includes only Custom inventory_script hosts
    organization: Ansible, Inc

  - name: local
    description: 'Host(s) with ansible_connection:local'
    organization: Ansible, Inc
    variables:
      ansible_connection: local

groups:
  - name: local
    description: A group for systems that map to localhost
    inventory: inventory-all
    variables:
      ansible_connection: local

  - name: local_1-10
    description: A sub-group for systems that map to localhost
    inventory: inventory-all
    parent: local

  - name: local_11-20
    description: A sub-group for systems that map to localhost
    inventory: inventory-all
    parent: local

  - name: local_11-15
    description: A sub-group for systems that map to localhost
    inventory: inventory-all
    parent: local_11-20

  - name: local_16-20
    description: A sub-group for systems that map to localhost
    inventory: inventory-all
    parent: local_11-20

  - name: local_16
    description: A sub-group for systems that map to localhost
    inventory: inventory-all
    parent: local_16-20

  - name: local_17
    description: A sub-group for systems that map to localhost
    inventory: inventory-all
    parent: local_16-20

  - name: local_18
    description: A sub-group for systems that map to localhost
    inventory: inventory-all
    parent: local_16-20

  - name: local_19
    description: A sub-group for systems that map to localhost
    inventory: inventory-all
    parent: local_16-20

  - name: local_20
    description: A sub-group for systems that map to localhost
    inventory: inventory-all
    parent: local_16-20

  - name: cloud
    description: Group for dynamic cloud-based inventory
    inventory: inventory-all

  - name: aws
    description: Group for tracking Amazon EC2 instances
    inventory: inventory-all
    parent: cloud

  - name: gce
    description: Group for tracking Google Compute servers
    inventory: inventory-all
    parent: cloud

  - name: vmware
    description: Group for tracking VMware vCenter hosts
    inventory: inventory-all
    parent: cloud

  - name: openstack
    description: Group for tracking OpenStack hosts
    inventory: inventory-all
    parent: cloud

  - name: Amazon EC2 Instances
    inventory: inventory-aws

  - name: Google Compute Engine
    inventory: inventory-gce

  - name: VMware vCenter
    inventory: inventory-vmware

  - name: OpenStack
    inventory: inventory-openstack

  - name: Custom Inventory
    inventory: inventory-custom

  - name: unresolvable host group
    inventory: inventory-custom

inventory_sources:
  - name: inventory-all/aws  # name is used for internal purposes
    group: aws
    inventory: inventory-all
    source: ec2
    credential: 'AWS (user:bender_eng_user)'
    overwrite: true
    overwrite_vars: true
    update_on_launch: true
    update_interval: 0

  - name: inventory-all/gce  # name is used for internal purposes
    group: gce
    inventory: inventory-all
    source: gce
    credential: 'Google Compute (team:IT)'
    # source_username: # stored in credentials.yaml
    # source_password: # stored in credentials.yaml
    overwrite: true
    overwrite_vars: true
    update_on_launch: true
    update_interval: 0

  - name: inventory-all/vmware  # name is used for internal purposes
    group: vmware
    inventory: inventory-all
    source: vmware
    credential: 'VMware vCenter (team:IT)'
    # source_username: # stored in credentials.yaml
    # source_password: # stored in credentials.yaml
    source_vars:
      validate_certs: false
    overwrite: true
    overwrite_vars: true
    update_on_launch: true
    update_interval: 0

  - name: inventory-all/openstack  # name is used for internal purposes
    group: openstack
    inventory: inventory-all
    source: openstack
    credential: 'OpenStack (team:IT)'
    # source_username: # stored in credentials.yaml
    # source_password: # stored in credentials.yaml
    overwrite: true
    overwrite_vars: true
    update_on_launch: true
    update_interval: 0

  - name: inventory-aws  # name is used for internal purposes
    group: Amazon EC2 Instances
    inventory: inventory-aws
    source: ec2
    credential: 'AWS (team:IT)'
    overwrite: false
    overwrite_vars: false
    update_on_launch: false
    update_interval: 0

  - name: inventory-gce  # name is used for internal purposes
    group: Google Compute Engine
    inventory: inventory-gce
    source: gce
    credential: 'Google Compute (team:IT)'
    # source_username: # stored in credentials.yaml
    # source_password: # stored in credentials.yaml
    overwrite: false
    overwrite_vars: false
    update_on_launch: false
    update_interval: 0

  - name: inventory-vmware  # name is used for internal purposes
    group: VMware vCenter
    inventory: inventory-vmware
    source: vmware
    credential: 'VMware vCenter (team:IT)'
    # source_username: # stored in credentials.yaml
    # source_password: # stored in credentials.yaml
    source_vars:
      validate_certs: false
    overwrite: false
    overwrite_vars: false
    update_on_launch: false
    update_interval: 0

  - name: inventory-openstack  # name is used for internal purposes
    group: OpenStack
    inventory: inventory-openstack
    source: openstack
    credential: 'OpenStack (team:IT)'
    # source_username: # stored in credentials.yaml
    # source_password: # stored in credentials.yaml
    overwrite: false
    overwrite_vars: false
    update_on_launch: false
    update_interval: 0

  - name: inventory-custom  # name is used for internal purposes
    group: Custom Inventory
    inventory: inventory-custom
    source: custom
    source_script: script_generate_hosts
    # source_username: # stored in credentials.yaml
    # source_password: # stored in credentials.yaml
    source_vars:
      NUM_HOSTS: '5'
    overwrite: true
    overwrite_vars: false
    update_on_launch: true
    update_interval: 0

hosts:
  - name: 127.0.0.1
    description: localhost (ip address)
    inventory: inventory-all
    groups:
      - local

  - name: localhost
    description: localhost (hostname)
    inventory: inventory-all
    groups:
      - local

  - name: unresolvable-name.example.com
    description: localhost (ansible_host)
    inventory: inventory-custom
    variables:
      ansible_user: root
      ansible_host: 127.0.0.1
    groups:
      - unresolvable host group

  - name: not a valid hostname
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: localhost
    groups:
      - local

  - name: host-1.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_1-10

  - name: host-2.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_1-10

  - name: host-3.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_1-10

  - name: host-4.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_1-10

  - name: host-5.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_1-10

  - name: host-6.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_1-10

  - name: host-7.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_1-10

  - name: host-8.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_1-10

  - name: host-9.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_1-10

  - name: host-10.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_1-10

  - name: host-11.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_11-20
      - local_11-15

  - name: host-12.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_11-20
      - local_11-15

  - name: host-13.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_11-20
      - local_11-15

  - name: host-14.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_11-20
      - local_11-15

  - name: host-15.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_11-20
      - local_11-15

  - name: host-16.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_11-20
      - local_16-20
      - local_16

  - name: host-17.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_11-20
      - local_16-20
      - local_17

  - name: host-18.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_11-20
      - local_16-20
      - local_18

  - name: host-19.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_11-20
      - local_16-20
      - local_19

  - name: host-20.example.com
    description: localhost (ansible_host)
    inventory: inventory-all
    variables:
      ansible_host: 127.0.0.1
    groups:
      - local
      - local_11-20
      - local_16-20
      - local_20

  - name: local
    inventory: local

job_templates:
  - name: 'language_features/tags.yml (tags:foo, limit:unresolvable-name.example.com)'
    job_type: check
    playbook: language_features/tags.yml
    project: ansible-examples.git (github, ssh_key_data)
    inventory: inventory-custom
    credential: 'SSH (user:bender_eng_user, password:***)'
    job_tags: foo
    limit: unresolvable-name.example.com

  - name: 'scan job_template/scan_facts.yml'
    job_type: run
    project: Tower Fact Scan - Ansible, Inc
    playbook: scan_facts.yml
    inventory: local
    credential: 'SSH (user:bender_eng_user, password:***)'
    extra_vars:
      scan_file_paths: "/tmp,/bin"
    use_fact_cache: true

  - name: ansible-tower.git/setup/install.yml
    job_type: run
    playbook: setup/install.yml
    project: ansible-tower.git (github, ssh_key_data)
    inventory: local
    credential: 'SSH (team:Ansible Users, ssh_key_data)'
    limit: ansible-tower
    extra_vars:
      sudo: true
      sudo_user: root

  - name: ansible-playbooks.git/dynamic_inventory.yml
    job_type: run
    project: ansible-playbooks.git (github, ssh_key_data)
    playbook: dynamic_inventory.yml
    inventory: local
    credential: 'SSH (team:Ansible Users, ssh_key_data)'
    extra_vars:
      num_hosts: 10

  - name: ansible-playbooks.git/fail_unless.yml
    job_type: run
    project: ansible-playbooks.git (github, ssh_key_data)
    playbook: fail_unless.yml
    inventory: local
    credential: 'SSH (team:Ansible Users, ssh_key_data)'
    extra_vars:
      fail: false

  - name: ansible-playbooks.git/pass_unless.yml
    job_type: run
    project: ansible-playbooks.git (github, ssh_key_data)
    playbook: pass_unless.yml
    inventory: local
    credential: 'SSH (team:Ansible Users, ssh_key_data, ssh_key_unlock:***)'
    extra_vars:
      fail: false

  - name: ansible-playbooks.git/sleep.yml
    job_type: run
    project: ansible-playbooks.git (github, ssh_key_data)
    playbook: sleep.yml
    inventory: local
    credential: 'SSH (team:Ansible Users, become_password:***)'
